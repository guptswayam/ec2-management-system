{"version":3,"sources":["containers/Instances/InstanceView.module.css","components/Instance/Instance.module.css","containers/AddCredential/AddCredential.module.css","components/Header/Header.js","containers/Layout/Layout.js","store/actions/actionTypes.js","components/Alert/Alert.js","containers/Auth/Login.js","containers/Homepage/Homepage.js","containers/Auth/Signup.js","utils/utility.js","components/Instance/Instance.js","components/Loader/Loader.js","containers/Instances/InstancesList.js","store/actions/auth.js","containers/AddCredential/AddCredential.js","containers/Instances/InstanceView.js","App.js","store/reducers/auth.js","index.js"],"names":["module","exports","Header","props","className","to","user","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","style","background","border","padding","marginTop","color","outline","onClick","logoutHandler","Layout","a","fetch","res","json","status","window","location","assign","this","children","Component","LOGIN_SUCCESS","LOGIN_FAILED","AUTH_START","Alert","display","position","top","left","transform","zIndex","value","Login","state","formData","email","password","showAlert","alertType","alertMsg","inputChangeHandler","key","event","setState","target","loginHandler","preventDefault","buttonRef","current","textContent","disabled","method","headers","body","JSON","stringify","resData","setTimeout","history","push","loginSuccessful","data","console","log","message","createRef","alert","maxWidth","margin","onSubmit","required","placeholder","onChange","bind","ref","connect","dispatch","actionTypes","Homepage","textAlign","Signup","name","capitalize","str","toUpperCase","substr","Instance","classes","my_address","fontWeight","region","State","Name","Tags","length","Key","Value","InstanceType","address_buttons","marginLeft","viewDetails","Loader","Spinner","animation","role","size","InstancesList","instances","loading","error","getInstances","useCache","content","fontSize","map","el","loginFailed","AddCredential","accessKey","secretKey","addCredentialHandler","e","InstanceView","instance","getInstance","match","params","changeState","prevState","CurrentState","Date","LaunchTime","toLocaleString","dateStyle","timeStyle","PublicIpAddress","PublicDnsName","CpuOptions","CoreCount","App","appLoading","checkUserSession","routes","path","component","exact","from","authReducer","initialState","reducer","action","composeEnhancers","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,WAAa,iCAAiC,gBAAkB,wC,mBCAlFD,EAAOC,QAAU,CAAC,WAAa,6BAA6B,gBAAkB,oC,mBCA9ED,EAAOC,QAAU,CAAC,gBAAkB,yC,wMCwCrBC,EAtCA,SAACC,GACZ,OACI,yBAAKC,UAAU,+CACX,kBAAC,IAAD,CAASA,UAAU,eAAeC,GAAIF,EAAMG,KAAK,aAAc,KAA/D,yBACA,4BAAQF,UAAU,iBAAiBG,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACxJ,0BAAMR,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BS,GAAG,aACzC,0BAAMT,UAAU,YAChB,wBAAIA,UAAU,uBACTD,EAAMG,KAEC,kBAAC,IAAMQ,SAAP,KACI,wBAAIV,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,oBAAjC,qBAEJ,wBAAID,UAAU,YACV,4BAAQW,MAAO,CAACC,WAAY,OAAQC,OAAQ,OAAQC,QAAS,MAAOC,UAAW,MAAMC,MAAM,YAAaC,QAAS,QAASC,QAASnB,EAAMoB,eAAzI,YAKZ,kBAAC,IAAMT,SAAP,KACI,wBAAIV,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,UAAjC,UAEJ,wBAAID,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,WAAjC,iBCRjBmB,E,4MAjBXD,c,sBAAe,4BAAAE,EAAA,sEACOC,MAAM,wBADb,cACLC,EADK,gBAEWA,EAAIC,OAFf,OAGW,YAHX,OAGAC,QACPC,OAAOC,SAASC,OAAO,KAJhB,2C,uDAQX,OACI,yBAAK5B,UAAU,mBACX,kBAAC,EAAD,CAAQE,KAAM2B,KAAK9B,MAAMG,KAAMiB,cAAeU,KAAKV,gBAClDU,KAAK9B,MAAM+B,c,GAbPC,a,sBCHRC,EAAgB,gBAChBC,EAAe,eACfC,EAAa,a,QCMXC,EAND,SAAApC,GACV,OACI,uBAAGC,UAAS,sBAAiBD,EAAMI,MAAQQ,MAAO,CAACyB,QAAS,SAAUC,SAAU,QAASC,IAAK,QAASC,KAAM,MAAOC,UAAW,mBAAoBC,OAAQ,MAAO1C,EAAM2C,QCA1KC,E,kDAEF,WAAY5C,GAAO,IAAD,8BACd,cAAMA,IAIV6C,MAAQ,CACJC,SAAU,CACNC,MAAO,GACPC,SAAU,IAEdC,WAAW,EACXC,UAAW,UACXC,SAAU,IAZI,EAelBC,mBAAoB,SAACC,EAAIC,GACrB,EAAKC,SAAS,CACVT,SAAS,2BACF,EAAKD,MAAMC,UADV,kBAEHO,EAAMC,EAAME,OAAOb,WAnBd,EAwBlBc,aAxBkB,uCAwBJ,WAAOH,GAAP,iBAAAhC,EAAA,6DACVgC,EAAMI,iBADI,SAGN,EAAKC,UAAUC,QAAQC,YAAc,gBACrC,EAAKF,UAAUC,QAAQE,UAAS,EAJ1B,SAKYvC,MAAM,sBAAuB,CAC3CwC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,EAAKtB,MAAMC,YAR9B,cAKAtB,EALA,gBAUgBA,EAAIC,OAVpB,OAWgB,aADhB2C,EAVA,QAWK1C,QACP,EAAKiC,UAAUC,QAAQC,YAAc,QACrC,EAAKF,UAAUC,QAAQE,UAAS,EAC/B,EAAKP,SAAS,CACXL,UAAW,UACXD,WAAW,EACXE,SAAU,qBAEdkB,YAAW,WACP,EAAKd,SAAS,CACVN,WAAW,IAEf,EAAKjD,MAAMsE,QAAQC,KAAK,aACxB,EAAKvE,MAAMwE,gBAAgBJ,EAAQK,QACrC,OAGFC,QAAQC,IAAIP,EAAQQ,SACpB,EAAKjB,UAAUC,QAAQC,YAAc,QACrC,EAAKF,UAAUC,QAAQE,UAAS,EAChC,EAAKP,SAAS,CACVL,UAAW,SACXD,WAAW,EACXE,SAAUiB,EAAQQ,UAEtBP,YAAW,WACP,EAAKd,SAAS,CACVN,WAAW,MAEjB,MAxCA,kDA6CNyB,QAAQC,IAAR,MACA,EAAKhB,UAAUC,QAAQC,YAAc,QACrC,EAAKF,UAAUC,QAAQE,UAAS,EAChC,EAAKP,SAAS,CACVL,UAAW,SACXD,WAAW,EACXE,SAAU,yBAEdkB,YAAW,WACP,EAAKd,SAAS,CACVN,WAAW,MAEjB,KAzDI,0DAxBI,sDAEd,EAAKU,UAAYkB,sBAFH,E,qDAuFd,IAAIC,EAAQ,KAIZ,OAHGhD,KAAKe,MAAMI,YACV6B,EAAQ,kBAAC,EAAD,CAAO1E,KAAM0B,KAAKe,MAAMK,UAAWP,MAAOb,KAAKe,MAAMM,YAG7D,0BAAMlD,UAAU,aAAaW,MAAO,CAACmE,SAAU,QAASC,OAAQ,QAASC,SAAUnD,KAAK2B,cACnFqB,EACD,wCACA,2BAAO1E,KAAK,QAAQ8E,UAAQ,EAACC,YAAY,QAAQlF,UAAU,eAAe0C,MAAOb,KAAKe,MAAMC,SAASC,MAAOqC,SAAUtD,KAAKsB,mBAAmBiC,KAAKvD,KAAM,WACzJ,2CACA,2BAAO1B,KAAK,WAAW8E,UAAQ,EAACC,YAAY,WAAWlF,UAAU,eAAe0C,MAAOb,KAAKe,MAAMC,SAASE,SAAUoC,SAAUtD,KAAKsB,mBAAmBiC,KAAKvD,KAAM,cAClK,6BACA,4BAAQ7B,UAAU,kBAAkBG,KAAK,SAASkF,IAAKxD,KAAK6B,WAA5D,c,GArGI3B,aAkHLuD,cAAQ,MANI,SAAAC,GACvB,MAAO,CACHhB,gBAAiB,SAACrE,GAAD,OAAQqF,EAAS,CAACpF,KAAMqF,EAA2BtF,KAAMA,QAInEoF,CAAkC3C,GClGlC8C,E,uKAfP,OACI,yBAAK9E,MAAO,CAAC+E,UAAW,WACpB,6BACA,iFACA,kBAAC,IAAD,CAASzF,GAAG,UAAUD,UAAU,mBAAhC,UACA,6BAAS,6BACT,kBAAC,IAAD,CAASC,GAAG,SAASD,UAAU,mBAA/B,SACA,6BAAK,kC,GATE+B,aC6GR4D,E,kDA5GX,WAAY5F,GAAO,IAAD,8BACd,cAAMA,IAIV6C,MAAQ,CACJC,SAAU,CACNC,MAAO,GACPC,SAAU,GACV6C,KAAM,IAEV5C,WAAW,EACXC,UAAW,UACXC,SAAU,IAbI,EAgBlBC,mBAAoB,SAACC,EAAIC,GACrB,EAAKC,SAAS,CACVT,SAAS,2BACF,EAAKD,MAAMC,UADV,kBAEHO,EAAMC,EAAME,OAAOb,WApBd,EAyBlBc,aAzBkB,uCAyBJ,WAAOH,GAAP,iBAAAhC,EAAA,6DACVgC,EAAMI,iBADI,SAGN,EAAKC,UAAUC,QAAQC,YAAc,gBACrC,EAAKF,UAAUC,QAAQE,UAAS,EAJ1B,SAKYvC,MAAM,uBAAwB,CAC5CwC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,EAAKtB,MAAMC,YAR9B,cAKAtB,EALA,gBAUgBA,EAAIC,OAVpB,OAWgB,aADhB2C,EAVA,QAWK1C,QACP,EAAKiC,UAAUC,QAAQC,YAAc,SACrC,EAAKF,UAAUC,QAAQE,UAAS,EAC/B,EAAKP,SAAS,CACXL,UAAW,UACXD,WAAW,EACXE,SAAU,yBAEdkB,YAAW,WACP,EAAKd,SAAS,CACVN,WAAW,IAEf,EAAKjD,MAAMsE,QAAQC,KAAK,YAC1B,OAGFG,QAAQC,IAAIP,EAAQQ,SACpB,EAAKjB,UAAUC,QAAQC,YAAc,SACrC,EAAKF,UAAUC,QAAQE,UAAS,EAChC,EAAKP,SAAS,CACVL,UAAW,SACXD,WAAW,EACXE,SAAUiB,EAAQQ,UAEtBP,YAAW,WACP,EAAKd,SAAS,CACVN,WAAW,MAEjB,MAvCA,kDA4CNyB,QAAQC,IAAR,MACA,EAAKhB,UAAUC,QAAQC,YAAc,SACrC,EAAKF,UAAUC,QAAQE,UAAS,EAChC,EAAKP,SAAS,CACVL,UAAW,SACXD,WAAW,EACXE,SAAU,yBAEdkB,YAAW,WACP,EAAKd,SAAS,CACVN,WAAW,MAEjB,KAxDI,0DAzBI,sDAEd,EAAKU,UAAYkB,sBAFH,E,qDAuFd,IAAIC,EAAQ,KAIZ,OAHGhD,KAAKe,MAAMI,YACV6B,EAAQ,kBAAC,EAAD,CAAO1E,KAAM0B,KAAKe,MAAMK,UAAWP,MAAOb,KAAKe,MAAMM,YAG7D,0BAAMlD,UAAU,aAAaW,MAAO,CAACmE,SAAU,QAASC,OAAQ,QAASC,SAAUnD,KAAK2B,cACnFqB,EACD,uCACA,2BAAO1E,KAAK,OAAO8E,UAAQ,EAACC,YAAY,OAAOlF,UAAU,eAAe0C,MAAOb,KAAKe,MAAMC,SAAS+C,KAAMT,SAAUtD,KAAKsB,mBAAmBiC,KAAKvD,KAAM,UACtJ,wCACA,2BAAO1B,KAAK,QAAQ8E,UAAQ,EAACC,YAAY,QAAQlF,UAAU,eAAe0C,MAAOb,KAAKe,MAAMC,SAASC,MAAOqC,SAAUtD,KAAKsB,mBAAmBiC,KAAKvD,KAAM,WACzJ,2CACA,2BAAO1B,KAAK,WAAW8E,UAAQ,EAACC,YAAY,WAAWlF,UAAU,eAAe0C,MAAOb,KAAKe,MAAMC,SAASE,SAAUoC,SAAUtD,KAAKsB,mBAAmBiC,KAAKvD,KAAM,cAClK,6BACA,4BAAQ7B,UAAU,kBAAkBG,KAAK,SAASkF,IAAKxD,KAAK6B,WAA5D,e,GAvGK3B,aCFR8D,EAAa,SAASC,GAE/B,OADAA,EAAMA,EAAI,GAAGC,cAAgBD,EAAIE,OAAO,I,iBC0B7BC,EAvBE,SAAAlG,GACb,OACI,yBAAKY,MAAO,CAACG,QAAS,OAAQD,OAAQ,kBAAmBkE,OAAQ,cAC7D,yBAAK/E,UAAWkG,IAAQC,YACpB,2BAAG,0BAAMxF,MAAO,CAACyF,WAAY,SAA1B,iBAAwDrG,EAAMU,IACjE,2BAAG,0BAAME,MAAO,CAACyF,WAAY,SAA1B,YAAmDrG,EAAMsG,SAEhE,yBAAKrG,UAAWkG,IAAQC,YACpB,2BAAG,0BAAMxF,MAAO,CAACyF,WAAY,SAA1B,mBAA0DP,EAAW9F,EAAMuG,MAAMC,OACnFxG,EAAMyG,KAAKC,OAAS,EACjB,2BAAG,0BAAM9F,MAAO,CAACyF,WAAY,SAAUrG,EAAMyG,KAAK,GAAGE,IAAlD,MAAgE3G,EAAMyG,KAAK,GAAGG,OACnF,2BAAG,0BAAMhG,MAAO,CAACyF,WAAY,SAA1B,UAAiDrG,EAAM6G,eAEhE,yBAAK5G,UAAWkG,IAAQW,iBACpB,+BACA,6BACI,4BAAQ7G,UAAU,iBAAiBW,MAAO,CAACmG,WAAY,QAAS5F,QAASnB,EAAMgH,aAA/E,oB,QCRLC,EAVA,SAAAjH,GACX,OACI,yBAAKY,MAAO,CAAC+E,UAAW,WACpB,kBAACuB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASC,KAAK,KAAKzG,MAAO,CAACI,UAAW,SACnE,0BAAMf,UAAU,WAAhB,iBCsEDqH,E,4MAvEXzE,MAAQ,CACJ0E,UAAW,GACXC,SAAS,EACTC,MAAO,M,EAGXC,a,sBAAe,4CAAApG,EAAA,6DAAOqG,EAAP,+BAAgB,MAC3B,EAAKpE,SAAS,CACViE,SAAS,IAFF,SAIOjG,MAAM,+BAAD,OAAgCoG,IAJ5C,cAILnG,EAJK,gBAKWA,EAAIC,OALf,OAKL2C,EALK,OAMXM,QAAQC,IAAIP,GACU,YAAnBA,EAAQ1C,OACP,EAAK6B,SAAS,CACViE,SAAS,EACTD,UAAWnD,EAAQK,OAIvB,EAAKlB,SAAS,CACVkE,MAAOrD,EAAQQ,QACf4C,SAAS,IAhBN,4C,kEAsBX1F,KAAK4F,iB,kCAGGhH,EAAI4F,GACZxE,KAAK9B,MAAMsE,QAAQC,KAAnB,qBAAsC7D,EAAtC,YAA4C4F,M,+BAGtC,IAAD,OACDsB,EAAU,kBAAC,EAAD,MA2Bd,OA1BI9F,KAAKe,MAAM2E,UACXI,EACI,kBAAC,IAAMjH,SAAP,KACI,wBAAIC,MAAO,CAAC+E,UAAW,WAAvB,qBACA,yBAAK/E,MAAO,CAAC+E,UAAW,UACpB,4BAAQ1F,UAAU,oBAAoBkB,QAAS,WAAO,EAAKuG,aAAa,QAAQ,0BAAM9G,MAAO,CAACiH,SAAU,SAAxB,WAAhF,YAE6B,IAAhC/F,KAAKe,MAAM0E,UAAUb,QAAmC,OAAnB5E,KAAKe,MAAM4E,MAC7C,yBAAK7G,MAAO,CAAC+E,UAAW,WACpB,wBAAI/E,MAAO,CAAC+E,UAAW,WAAvB,sCACA,6BACA,4BAAQ1F,UAAU,kBAAkBkB,QAAS,WAAO,EAAKnB,MAAMsE,QAAQC,KAAK,sBAA5E,qBAEN,KACDzC,KAAKe,MAAM4E,OACR,yBAAK7G,MAAO,CAAC+E,UAAW,WACpB,4BAAK7D,KAAKe,MAAM4E,OAChB,6BACA,4BAAQxH,UAAU,kBAAkBkB,QAAS,WAAO,EAAKnB,MAAMsE,QAAQC,KAAK,sBAA5E,qBAGNzC,KAAKe,MAAM0E,UAAUO,KAAI,SAAAC,GACvB,OAAO,kBAAC,EAAD,iBAAcA,EAAd,CAAkB1E,IAAK0E,EAAGrH,GAAIsG,YAAa,WAAK,EAAKA,YAAYe,EAAGrH,GAAIqH,EAAGzB,iBAK9F,yBAAKrG,UAAU,mBACV2H,O,GAlEW5F,aCKtBgG,EAAc,WAChB,MAAO,CACH5H,KAAMqF,I,iBCiGCwC,E,4MAtGXpF,MAAM,CACFC,SAAU,CACNoF,UAAW,GACXC,UAAW,IAEflF,WAAW,EACXC,UAAW,UACXC,SAAU,I,EAGdC,mBAAoB,SAACC,EAAIC,GACrB,EAAKC,SAAS,CACVT,SAAS,2BACF,EAAKD,MAAMC,UADV,kBAEHO,EAAMC,EAAME,OAAOb,W,EAKhCyF,qB,uCAAsB,WAAOC,GAAP,iBAAA/G,EAAA,6DAClB+G,EAAE3E,iBADgB,SAGdgB,QAAQC,IAAI,EAAK9B,MAAMC,UAHT,SAIIvB,MAAM,+BAAgC,CACpDwC,OAAQ,QACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,EAAKtB,MAAMC,YAPtB,cAIRtB,EAJQ,gBASQA,EAAIC,OATZ,OAUM,aADd2C,EATQ,QAUH1C,QACP,EAAK6B,SAAS,CACVL,UAAW,UACXD,WAAW,EACXE,SAAU,sCAEdkB,YAAW,WACP,EAAKd,SAAS,CACVN,WAAW,IAEf,EAAKjD,MAAMsE,QAAQC,KAAK,gBAC1B,KACFG,QAAQC,IAAIP,KAGZ,EAAKb,SAAS,CACVL,UAAW,SACXD,WAAW,EACXE,SAAUiB,EAAQQ,UAEtBP,YAAW,WACP,EAAKd,SAAS,CACVN,WAAW,MAEjB,MAlCQ,kDAsCd,EAAKM,SAAS,CACVL,UAAW,SACXD,WAAW,EACXE,SAAU,yBAEdkB,YAAW,WACP,EAAKd,SAAS,CACVN,WAAW,MAEjB,KA/CY,0D,6GAmDb,IAAD,OAEA6B,EAAQ,KAIZ,OAHGhD,KAAKe,MAAMI,YACV6B,EAAQ,kBAAC,EAAD,CAAO1E,KAAM0B,KAAKe,MAAMK,UAAWP,MAAOb,KAAKe,MAAMM,YAG7D,kBAAC,IAAMxC,SAAP,KACI,yBAAKV,UAAU,mBACV6E,EACD,wBAAIlE,MAAO,CAAC+E,UAAW,WAAvB,wBACA,0BAAM1F,UAAU,aAAaW,MAAO,CAACmE,SAAU,QAASC,OAAQ,QAASC,SAAUnD,KAAKsG,sBACpF,2BAAOhI,KAAK,OAAO+E,YAAY,aAAalF,UAAU,eAAe0C,MAAOb,KAAKe,MAAMC,SAASoF,UAAW9C,SAAUtD,KAAKsB,mBAAmBiC,KAAKvD,KAAM,aAAcoD,UAAQ,IAC9K,6BACA,2BAAO9E,KAAK,OAAO+E,YAAY,aAAalF,UAAU,eAAe0C,MAAOb,KAAKe,MAAMC,SAASqF,UAAW/C,SAAUtD,KAAKsB,mBAAmBiC,KAAKvD,KAAM,aAAcoD,UAAQ,IAC9K,6BACA,yBAAKjF,UAAWkG,IAAQW,iBACpB,+BACA,6BACI,4BAAQ7G,UAAU,kBAAkBG,KAAK,UAAzC,QACA,4BAAQH,UAAU,iBAAiBG,KAAK,SAASQ,MAAO,CAACmG,WAAY,QAAS5F,QAAS,WAAK,EAAKnB,MAAMsE,QAAQC,KAAK,gBAApH,mB,GA3FJvC,a,iBCsJbsG,E,4MApJXzF,MAAQ,CACJ0F,SAAU,GACVf,SAAS,EACTC,MAAO,KACP3D,UAAU,EACVb,WAAW,EACXC,UAAW,UACXC,SAAU,I,EAGdqF,Y,sBAAc,4CAAAlH,EAAA,6DAAOqG,EAAP,+BAAgB,MAC1B,EAAKpE,SAAS,CACViE,SAAS,IAFH,SAIQjG,MAAM,qBAAD,OAAsB,EAAKvB,MAAMyI,MAAMC,OAAOhI,GAA9C,YAAoD,EAAKV,MAAMyI,MAAMC,OAAOpC,OAA5E,sBAAgGqB,IAJ7G,cAIJnG,EAJI,gBAKYA,EAAIC,OALhB,OAKJ2C,EALI,OAMVM,QAAQC,IAAIP,GACU,YAAnBA,EAAQ1C,OACP,EAAK6B,SAAS,CACViE,SAAS,EACTe,SAAUnE,EAAQK,OAItB,EAAKlB,SAAS,CACVkE,MAAOrD,EAAQQ,QACf4C,SAAS,IAhBP,4C,EAyBdmB,Y,sBAAc,8BAAArH,EAAA,6DACV,EAAKiC,SAAS,CACVO,UAAU,IAFJ,SAIQvC,MAAM,qBAAD,OAAuD,YAAjC,EAAKsB,MAAM0F,SAAShC,MAAMC,KAAmB,OAAQ,QAA3E,YAAsF,EAAKxG,MAAMyI,MAAMC,OAAOhI,GAA9G,YAAoH,EAAKV,MAAMyI,MAAMC,OAAOpC,QAAU,CACzKvC,OAAQ,UALF,cAIJvC,EAJI,gBAOYA,EAAIC,OAPhB,OASY,aAFhB2C,EAPI,QASC1C,QACP,EAAK6B,UAAS,SAAAqF,GAAS,MAAK,CACxBL,SAAS,2BACFK,EAAUL,UADT,IAEJhC,MAAM,2BACCqC,EAAUrC,OADZ,IAEDC,KAAMpC,EAAQK,KAAqC,YAAhCmE,EAAUL,SAAShC,MAAMC,KAAmB,oBAAqB,qBAAqB,GAAGqC,aAAarC,SAGjItD,UAAW,UACXD,WAAW,EACXE,SAAU,qCAEdkB,YAAW,WACP,EAAKd,SAAS,CACVN,WAAW,MAEjB,OAGF,EAAKM,SAAS,CACVL,UAAW,SACXD,WAAW,EACXE,SAAUiB,EAAQQ,QAClBd,UAAU,IAEdO,YAAW,WACP,EAAKd,SAAS,CACVN,WAAW,MAEjB,MAvCI,2C,kEAHVnB,KAAK0G,gB,kCA+CG9H,GACRoB,KAAK9B,MAAMsE,QAAQC,KAAnB,qBAAsC7D,M,+BAGhC,IAAD,OACDkH,EAAU,kBAAC,EAAD,MACV9F,KAAKe,MAAM2E,UAEPI,EADD9F,KAAKe,MAAM4E,MAEN,yBAAK7G,MAAO,CAAC+E,UAAW,WAChB,sDAKR,kBAAC,IAAMhF,SAAP,KACI,yBAAKC,MAAO,CAAC+E,UAAW,UACpB,6BACA,4BAAQ1F,UAAU,oBAAoBkB,QAAS,WAAO,EAAKqH,YAAY,QAAQ,0BAAM5H,MAAO,CAACiH,SAAU,SAAxB,WAA/E,YAGJ,yBAAKjH,MAAO,CAACG,QAAS,OAAQD,OAAQ,kBAAmBkE,OAAQ,cAC7D,yBAAK/E,UAAWkG,IAAQC,YACpB,2BAAG,0BAAMxF,MAAO,CAACyF,WAAY,SAA1B,iBAAwDvE,KAAKe,MAAM0F,SAAS7H,IAC/E,2BAAG,0BAAME,MAAO,CAACyF,WAAY,SAA1B,YAAmDvE,KAAKe,MAAM0F,SAASjC,SAE9E,yBAAKrG,UAAWkG,IAAQC,YACpB,2BAAG,0BAAMxF,MAAO,CAACyF,WAAY,SAA1B,mBAA0DP,EAAWhE,KAAKe,MAAM0F,SAAShC,MAAMC,OAClG,2BAAG,0BAAM5F,MAAO,CAACyF,WAAY,SAA1B,UAAiDvE,KAAKe,MAAM0F,SAAS1B,eAE5E,yBAAK5G,UAAWkG,IAAQC,YACpB,2BAAG,0BAAMxF,MAAO,CAACyF,WAAY,SAA1B,iBAAwD,IAAIyC,KAAKhH,KAAKe,MAAM0F,SAASQ,YAAYC,eAAe,QAAS,CAACC,UAAW,OAAQC,UAAW,UAC3J,2BAAG,0BAAMtI,MAAO,CAACyF,WAAY,SAA1B,uBAA8DvE,KAAKe,MAAM0F,SAASY,kBAEzF,yBAAKlJ,UAAWkG,IAAQC,YACpB,2BAAG,0BAAMxF,MAAO,CAACyF,WAAY,SAA1B,qBAA4DvE,KAAKe,MAAM0F,SAASa,eACnF,2BAAG,0BAAMxI,MAAO,CAACyF,WAAY,SAA1B,eAAsDvE,KAAKe,MAAM0F,SAASc,WAAWC,YAE3FxH,KAAKe,MAAM0F,SAAS9B,KAAKC,OAAS,GAC/B,yBAAKzG,UAAWkG,IAAQC,YACpB,2BAAG,0BAAMxF,MAAO,CAACyF,WAAY,SAAUvE,KAAKe,MAAM0F,SAAS9B,KAAK,GAAGE,IAAhE,MAA8E7E,KAAKe,MAAM0F,SAAS9B,KAAK,GAAGG,QAGrH,yBAAK3G,UAAWkG,IAAQW,iBACpB,+BACA,6BACwC,YAAnChF,KAAKe,MAAM0F,SAAShC,MAAMC,MAAyD,YAAnC1E,KAAKe,MAAM0F,SAAShC,MAAMC,KACzE,4BAAQvG,UAAU,iBAAiBW,MAAO,CAACmG,WAAY,QAAS5F,QAASW,KAAK6G,YAAa7E,SAAUhC,KAAKe,MAAMiB,UAA8C,YAAnChC,KAAKe,MAAM0F,SAAShC,MAAMC,KAAqB,OAAQ,SACjL,4BAAQvG,UAAU,iBAAiBW,MAAO,CAACmG,WAAY,QAASjD,UAAQ,GAAxE,gBAQ/B,IAAIgB,EAAQ,KAIZ,OAHGhD,KAAKe,MAAMI,YACV6B,EAAQ,kBAAC,EAAD,CAAO1E,KAAM0B,KAAKe,MAAMK,UAAWP,MAAOb,KAAKe,MAAMM,YAG7D,yBAAKlD,UAAU,mBACV2H,EACA9C,O,GA/IU9C,aCSrBuH,E,4MAEJ1G,MAAM,CACJ2G,YAAY,G,kEAIZ1H,KAAK9B,MAAMyJ,mBACX3H,KAAKyB,SAAS,CACZiG,YAAY,M,+BAMd,IAAIE,EA0BJ,OAvBEA,EADC5H,KAAK9B,MAAMG,KAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwJ,KAAK,mBAAmBC,UAAW3B,IAC1C,kBAAC,IAAD,CAAO0B,KAAK,yBAAyBC,UAAWtB,IAChD,kBAAC,IAAD,CAAOqB,KAAK,aAAaE,OAAK,EAACD,UAAWtC,IAC1C,kBAAC,IAAD,CAAUwC,KAAK,IAAI5J,GAAG,gBAMxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyJ,KAAK,SAASE,OAAK,EAACD,UAAWhH,IACtC,kBAAC,IAAD,CAAO+G,KAAK,UAAUE,OAAK,EAACD,UAAWhE,IACvC,kBAAC,IAAD,CAAO+D,KAAM,IAAIE,OAAK,EAACD,UAAWlE,IAClC,kBAAC,IAAD,CAAUoE,KAAK,IAAI5J,GAAG,OAKzB4B,KAAK9B,MAAMwH,UACZkC,EAAS,kBAAC,EAAD,OAGT,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQvJ,KAAM2B,KAAK9B,MAAMG,MACtB2B,KAAKe,MAAM2G,WAAW,KAAME,Q,GA5CrB1H,aAiEHuD,eAdS,SAAA1C,GACtB,MAAM,CACJ1C,KAAM0C,EAAMkH,YAAY5J,KACxBsH,MAAO5E,EAAMkH,YAAYtC,MACzBD,QAAS3E,EAAMkH,YAAYvC,YAIJ,SAAAhC,GACzB,MAAM,CACJiE,iBAAkB,kBAAIjE,EHtDtB,uCAAO,WAAMA,GAAN,iBAAAlE,EAAA,sEAECkE,EARD,CACHpF,KAAMqF,IAKH,SAGmBlE,MAAM,oBAHzB,cAGOC,EAHP,gBAIuBA,EAAIC,OAJ3B,OAKuB,aADhB2C,EAJP,QAKY1C,OACP8D,GA1BMrF,EA0BgBiE,EAAQK,KAzBnC,CACHrE,KAAMqF,EACNtF,KAAMA,KAyBEqF,EAASwC,KARd,kDAUCtD,QAAQC,IAAR,MACAa,EAASwC,KAXV,kCApBU,IAAC7H,IAoBX,qBAAP,2DG0DWoF,CAA6CgE,G,gBC/EtDS,EAAe,CACjB7J,KAAM,KACNqH,SAAS,EACTC,OAAO,GA0BIwC,EAvBC,WAA+B,IAA9BpH,EAA6B,uDAAvBmH,EAAcE,EAAS,uCAC1C,OAAOA,EAAO9J,MACV,KAAKqF,EACD,MAAO,CACHtF,KAAM+J,EAAO/J,KACbsH,OAAO,EACPD,SAAS,GAEjB,KAAK/B,EACD,MAAO,CACHtF,KAAM,KACNsH,OAAO,EACPD,SAAS,GAEjB,KAAK/B,EACD,OAAO,2BACA5C,GADP,IAEI2E,SAAS,IAEjB,QAAS,OAAO3E,IChBlBsH,EAA8GC,IAE9GC,EAAcC,YAAgB,CAClCP,gBAGIQ,EAAOC,YAAYH,EAAaF,EAAiBM,YAAgBC,OAEvEC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.2fa0b2f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_address\":\"InstanceView_my_address__3kP9J\",\"address_buttons\":\"InstanceView_address_buttons__2sbTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_address\":\"Instance_my_address__Zj3U5\",\"address_buttons\":\"Instance_address_buttons__3rTCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"address_buttons\":\"AddCredential_address_buttons__10cSG\"};","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nconst Header = (props)=>{\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" >\r\n            <NavLink className=\"navbar-brand\" to={props.user?\"/instances\": \"/\"}>EC2 Management System</NavLink>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <span className=\"mr-auto\"></span>\r\n                <ul className=\"navbar-nav mr-right\">\r\n                    {props.user ? \r\n                        (\r\n                            <React.Fragment>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link\" to=\"/add-credentials\">Edit Credentials</NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button style={{background: \"none\", border: \"none\", padding: \"0px\", marginTop: \"7px\",color:\"lightgray\", outline: \"none\"}} onClick={props.logoutHandler}>Logout</button>\r\n                                </li>\r\n                            </React.Fragment>\r\n                        ):\r\n                        (\r\n                        <React.Fragment>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/signup\">Sign up</NavLink>\r\n                            </li>\r\n                        </React.Fragment>\r\n                    )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\n\r\nclass Layout extends Component{\r\n\r\n    logoutHandler =async ()=>{\r\n        const res = await fetch(\"/api/v1/users/logout\");\r\n        const resData = await res.json();\r\n        if(resData.status === \"success\")\r\n            window.location.assign(\"/\");\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <Header user={this.props.user} logoutHandler={this.logoutHandler}/>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\r\nexport const AUTH_START = \"AUTH_START\";","import React from \"react\";\r\n\r\nconst Alert = props=>{\r\n    return (\r\n        <p className={`alert alert-${props.type}`} style={{display: \"inline\", position: \"fixed\", top: \"100px\", left: \"50%\", transform: \"translateX(-50%)\", zIndex: 500}}>{props.value}</p>\r\n    )\r\n}\r\n\r\nexport default Alert;","import React, { Component, createRef } from \"react\";\r\nimport * as actionTypes from \"./../../store/actions/actionTypes\";\r\nimport {connect} from \"react-redux\"\r\nimport Alert from \"../../components/Alert/Alert\";\r\nclass Login extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.buttonRef = createRef();\r\n    }\r\n\r\n    state = {\r\n        formData: {\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n        showAlert: false,\r\n        alertType: \"success\",\r\n        alertMsg: \"\"\r\n    }\r\n\r\n    inputChangeHandler= (key,event)=>{\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [key]: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    loginHandler= async (event)=>{\r\n        event.preventDefault();\r\n        try {\r\n            this.buttonRef.current.textContent = \"Logging in...\";\r\n            this.buttonRef.current.disabled=true;\r\n            const res = await fetch(\"/api/v1/users/login\", {\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(this.state.formData)\r\n            });\r\n            const resData = await res.json();\r\n            if(resData.status === \"success\"){\r\n                this.buttonRef.current.textContent = \"Login\";\r\n                this.buttonRef.current.disabled=false;\r\n                 this.setState({\r\n                    alertType: \"success\",\r\n                    showAlert: true,\r\n                    alertMsg: \"Login Successful\"\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                    this.props.history.push(\"/contacts\");\r\n                    this.props.loginSuccessful(resData.data);\r\n                },3000)\r\n            }\r\n            else{\r\n                console.log(resData.message);\r\n                this.buttonRef.current.textContent = \"Login\";\r\n                this.buttonRef.current.disabled=false;\r\n                this.setState({\r\n                    alertType: \"danger\",\r\n                    showAlert: true,\r\n                    alertMsg: resData.message\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                },3000)\r\n            }\r\n            \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.buttonRef.current.textContent = \"Login\";\r\n            this.buttonRef.current.disabled=false;\r\n            this.setState({\r\n                alertType: \"danger\",\r\n                showAlert: true,\r\n                alertMsg: \"something went wrong\"\r\n            })\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    showAlert: false\r\n                })\r\n            },3000)\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        let alert = null;\r\n        if(this.state.showAlert){\r\n            alert = <Alert type={this.state.alertType} value={this.state.alertMsg} />\r\n        }\r\n        return (\r\n            <form className=\"form-group\" style={{maxWidth: \"600px\", margin: \"auto\"}} onSubmit={this.loginHandler}>\r\n                {alert}\r\n                <label>Email</label>\r\n                <input type=\"email\" required placeholder=\"email\" className=\"form-control\" value={this.state.formData.email} onChange={this.inputChangeHandler.bind(this, \"email\")}/>\r\n                <label>Password</label>\r\n                <input type=\"password\" required placeholder=\"password\" className=\"form-control\" value={this.state.formData.password} onChange={this.inputChangeHandler.bind(this, \"password\")}/>\r\n                <br></br>\r\n                <button className=\"btn btn-primary\" type=\"submit\" ref={this.buttonRef}>Login</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch=>{\r\n    return {\r\n        loginSuccessful: (user)=>dispatch({type: actionTypes.LOGIN_SUCCESS, user: user}) \r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Homepage extends Component{\r\n    render(){\r\n        return (\r\n            <div style={{textAlign: \"center\"}}>\r\n                <br/>\r\n                <h2>To Manage your EC2 Instances, Please signup/login</h2>\r\n                <NavLink to=\"/signup\" className=\"btn btn-primary\">SIGNUP</NavLink>\r\n                <br></br><br></br>\r\n                <NavLink to=\"/login\" className=\"btn btn-success\">LOGIN</NavLink>\r\n                <br/><br/>\r\n                {/* <h2>To Check/Edit Your Address Book, Please login...</h2>\r\n                <NavLink to=\"/login\" className=\"btn btn-success\">LOGIN</NavLink> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React, { Component, createRef } from \"react\";\r\nimport Alert from \"../../components/Alert/Alert\";\r\nclass Signup extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.buttonRef = createRef();\r\n    }\r\n\r\n    state = {\r\n        formData: {\r\n            email: \"\",\r\n            password: \"\",\r\n            name: \"\"\r\n        },\r\n        showAlert: false,\r\n        alertType: \"success\",\r\n        alertMsg: \"\"\r\n    }\r\n\r\n    inputChangeHandler= (key,event)=>{\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [key]: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    loginHandler= async (event)=>{\r\n        event.preventDefault();\r\n        try {\r\n            this.buttonRef.current.textContent = \"Signing up...\";\r\n            this.buttonRef.current.disabled=true;\r\n            const res = await fetch(\"/api/v1/users/signup\", {\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(this.state.formData)\r\n            });\r\n            const resData = await res.json();\r\n            if(resData.status === \"success\"){\r\n                this.buttonRef.current.textContent = \"Signup\";\r\n                this.buttonRef.current.disabled=false;\r\n                 this.setState({\r\n                    alertType: \"success\",\r\n                    showAlert: true,\r\n                    alertMsg: \"Signup Successful...\"\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                    this.props.history.push(\"/login\");\r\n                },3000)\r\n            }\r\n            else{\r\n                console.log(resData.message);\r\n                this.buttonRef.current.textContent = \"Signup\";\r\n                this.buttonRef.current.disabled=false;\r\n                this.setState({\r\n                    alertType: \"danger\",\r\n                    showAlert: true,\r\n                    alertMsg: resData.message\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                },3000)\r\n            }\r\n            \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.buttonRef.current.textContent = \"Signup\";\r\n            this.buttonRef.current.disabled=false;\r\n            this.setState({\r\n                alertType: \"danger\",\r\n                showAlert: true,\r\n                alertMsg: \"something went wrong\"\r\n            })\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    showAlert: false\r\n                })\r\n            },3000)\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        let alert = null;\r\n        if(this.state.showAlert){\r\n            alert = <Alert type={this.state.alertType} value={this.state.alertMsg} />\r\n        }\r\n        return (\r\n            <form className=\"form-group\" style={{maxWidth: \"600px\", margin: \"auto\"}} onSubmit={this.loginHandler}>\r\n                {alert}\r\n                <label>Name</label>\r\n                <input type=\"text\" required placeholder=\"Name\" className=\"form-control\" value={this.state.formData.name} onChange={this.inputChangeHandler.bind(this, \"name\")}/>\r\n                <label>Email</label>\r\n                <input type=\"email\" required placeholder=\"Email\" className=\"form-control\" value={this.state.formData.email} onChange={this.inputChangeHandler.bind(this, \"email\")}/>\r\n                <label>Password</label>\r\n                <input type=\"password\" required placeholder=\"Password\" className=\"form-control\" value={this.state.formData.password} onChange={this.inputChangeHandler.bind(this, \"password\")}/>\r\n                <br></br>\r\n                <button className=\"btn btn-primary\" type=\"submit\" ref={this.buttonRef}>Signup</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","export const capitalize = function(str) {\r\n    str = str[0].toUpperCase() + str.substr(1)\r\n    return str\r\n}","import React from \"react\";\r\nimport { capitalize } from \"../../utils/utility\";\r\nimport classes from \"./Instance.module.css\"\r\n\r\nconst Instance = props=>{\r\n    return (\r\n        <div style={{padding: \"20px\", border: \"2px solid black\", margin: \"30px auto\"}}>\r\n            <div className={classes.my_address}>\r\n                <p><span style={{fontWeight: \"bold\"}}>Instance Id: </span>{props.id}</p>\r\n                <p><span style={{fontWeight: \"bold\"}}>Region: </span>{props.region}</p>\r\n            </div>\r\n            <div className={classes.my_address}>\r\n                <p><span style={{fontWeight: \"bold\"}}>Current State: </span>{capitalize(props.State.Name)}</p>\r\n                {props.Tags.length > 0 ? \r\n                    <p><span style={{fontWeight: \"bold\"}}>{props.Tags[0].Key}: </span>{props.Tags[0].Value}</p>\r\n                : <p><span style={{fontWeight: \"bold\"}}>Type: </span>{props.InstanceType}</p>}\r\n            </div>\r\n            <div className={classes.address_buttons}>\r\n                <span></span>\r\n                <div>\r\n                    <button className=\"btn btn-danger\" style={{marginLeft: \"15px\"}} onClick={props.viewDetails}>View Details</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default Instance;","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\"\r\nconst Loader = props=>{\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <Spinner animation=\"border\" role=\"status\" size=\"lg\" style={{marginTop: \"30px\"}}>\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { Component } from \"react\"\r\nimport Instance from \"../../components/Instance/Instance\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nclass InstancesList extends Component{\r\n    state = {\r\n        instances: [],\r\n        loading: true,\r\n        error: null\r\n    }\r\n\r\n    getInstances = async (useCache=\"yes\") => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        const res = await fetch(`/api/v1/instances/?useCache=${useCache}`)\r\n        const resData = await res.json()\r\n        console.log(resData)\r\n        if(resData.status === \"success\"){\r\n            this.setState({\r\n                loading: false,\r\n                instances: resData.data\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: resData.message,\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getInstances()\r\n    }\r\n\r\n    viewDetails(id, region) {\r\n        this.props.history.push(`/instances/${id}/${region}`)\r\n    }\r\n\r\n    render() {\r\n        let content = <Loader />\r\n        if(!this.state.loading)\r\n            content=(\r\n                <React.Fragment>\r\n                    <h1 style={{textAlign: \"center\"}}>ALL EC2 INSTANCES</h1>\r\n                    <div style={{textAlign: \"right\"}}>\r\n                        <button className=\"btn btn-secondary\" onClick={() => {this.getInstances(\"no\")}}><span style={{fontSize: \"20px\"}}>↻ </span>Refresh</button>\r\n                    </div>\r\n                    {this.state.instances.length === 0 && this.state.error===null? \r\n                        <div style={{textAlign: \"center\"}}>\r\n                            <h2 style={{textAlign: \"center\"}}>Your account has no EC2 Instances!</h2>\r\n                            <br></br>\r\n                            <button className=\"btn btn-success\" onClick={() => {this.props.history.push(\"/add-credentials\")}}>Edit Credentials</button>\r\n                        </div>\r\n                    : null}\r\n                    {this.state.error && \r\n                        <div style={{textAlign: \"center\"}}>\r\n                            <h2>{this.state.error}</h2>\r\n                            <br></br>\r\n                            <button className=\"btn btn-success\" onClick={() => {this.props.history.push(\"/add-credentials\")}}>Edit Credentials</button>\r\n                        </div>\r\n                    }\r\n                    { this.state.instances.map(el => {\r\n                        return <Instance {...el} key={el.id} viewDetails={()=>{this.viewDetails(el.id, el.region)}}/>\r\n                    })}\r\n                </React.Fragment>\r\n            )\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default InstancesList","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst loginSuccess = (user)=>{\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        user: user\r\n    }\r\n}\r\n\r\nconst loginFailed = ()=>{\r\n    return {\r\n        type: actionTypes.LOGIN_FAILED\r\n    }\r\n}\r\n\r\nconst authStart = ()=>{\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const checkUserSession = ()=>{\r\n    return async dispatch=>{\r\n        try {\r\n            dispatch(authStart());\r\n            const res = await fetch(\"/api/v1/users/me\");\r\n            const resData = await res.json();\r\n            if(resData.status === \"success\")\r\n                dispatch(loginSuccess(resData.data));\r\n            else\r\n                dispatch(loginFailed());\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch(loginFailed());\r\n        }\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Alert from \"../../components/Alert/Alert\";\r\nimport classes from \"./AddCredential.module.css\"\r\n\r\n\r\nclass AddCredential extends Component{\r\n    state={\r\n        formData: {\r\n            accessKey: \"\",\r\n            secretKey: \"\"\r\n        },\r\n        showAlert: false,\r\n        alertType: \"success\",\r\n        alertMsg: \"\"\r\n    }\r\n\r\n    inputChangeHandler= (key,event)=>{\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [key]: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    addCredentialHandler= async (e)=>{\r\n        e.preventDefault();\r\n        try {\r\n            console.log(this.state.formData);\r\n            const res = await fetch(`/api/v1/users/awsCredentials`, {\r\n                method: \"PATCH\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(this.state.formData)\r\n            });\r\n            const resData = await res.json();\r\n            if(resData.status===\"success\"){\r\n                this.setState({\r\n                    alertType: \"success\",\r\n                    showAlert: true,\r\n                    alertMsg: \"Credentials Added Successfully...\"\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                    this.props.history.push(\"/instances\");\r\n                },3000)\r\n                console.log(resData)\r\n            }\r\n            else{\r\n                this.setState({\r\n                    alertType: \"danger\",\r\n                    showAlert: true,\r\n                    alertMsg: resData.message\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                },3000)\r\n            }\r\n            \r\n        } catch (error) {\r\n            this.setState({\r\n                alertType: \"danger\",\r\n                showAlert: true,\r\n                alertMsg: \"something went wrong\"\r\n            })\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    showAlert: false\r\n                })\r\n            },3000)\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        let alert = null;\r\n        if(this.state.showAlert){\r\n            alert = <Alert type={this.state.alertType} value={this.state.alertMsg} />\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container-fluid\">\r\n                    {alert}\r\n                    <h1 style={{textAlign: \"center\"}}>EDIT AWS CREDENTIALS</h1>\r\n                    <form className=\"form-group\" style={{maxWidth: \"500px\", margin: \"auto\"}} onSubmit={this.addCredentialHandler}>\r\n                        <input type=\"text\" placeholder=\"Access Key\" className=\"form-control\" value={this.state.formData.accessKey} onChange={this.inputChangeHandler.bind(this, \"accessKey\")} required/>\r\n                        <br/>\r\n                        <input type=\"text\" placeholder=\"Secret Key\" className=\"form-control\" value={this.state.formData.secretKey} onChange={this.inputChangeHandler.bind(this, \"secretKey\")} required/>\r\n                        <br/>\r\n                        <div className={classes.address_buttons}>\r\n                            <span></span>\r\n                            <div>\r\n                                <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                <button className=\"btn btn-danger\" type=\"button\" style={{marginLeft: \"15px\"}} onClick={()=>{this.props.history.push(\"/instances\")}}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default AddCredential;","import React, { Component } from \"react\"\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { capitalize } from \"../../utils/utility\";\r\nimport classes from \"./InstanceView.module.css\"\r\nimport Alert from \"../../components/Alert/Alert\";\r\n\r\nclass InstanceView extends Component{\r\n    state = {\r\n        instance: {},\r\n        loading: true,\r\n        error: null,\r\n        disabled: false,\r\n        showAlert: false,\r\n        alertType: \"success\",\r\n        alertMsg: \"\"\r\n    }\r\n\r\n    getInstance = async (useCache=\"yes\") => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        const res = await fetch(`/api/v1/instances/${this.props.match.params.id}/${this.props.match.params.region}/?useCache=${useCache}`)\r\n        const resData = await res.json()\r\n        console.log(resData)\r\n        if(resData.status === \"success\"){\r\n            this.setState({\r\n                loading: false,\r\n                instance: resData.data\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: resData.message,\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getInstance()\r\n    }\r\n\r\n    changeState = async () => {\r\n        this.setState({\r\n            disabled: true\r\n        })\r\n        const res = await fetch(`/api/v1/instances/${this.state.instance.State.Name===\"running\" ? \"stop\": \"start\"}/${this.props.match.params.id}/${this.props.match.params.region}`, {\r\n            method: \"PATCH\"\r\n        })\r\n        const resData = await res.json()\r\n\r\n        if(resData.status === \"success\"){\r\n            this.setState(prevState => ({\r\n                instance: {\r\n                    ...prevState.instance,\r\n                    State: {\r\n                        ...prevState.State,\r\n                        Name: resData.data[prevState.instance.State.Name===\"running\" ? \"StoppingInstances\": \"StartingInstances\"][0].CurrentState.Name\r\n                    }\r\n                },\r\n                alertType: \"success\",\r\n                showAlert: true,\r\n                alertMsg: \"Changing the Instance State...\"\r\n            }))\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    showAlert: false\r\n                })\r\n            },3000)\r\n        }\r\n        else{\r\n            this.setState({\r\n                alertType: \"danger\",\r\n                showAlert: true,\r\n                alertMsg: resData.message,\r\n                disabled: false\r\n            })\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    showAlert: false\r\n                })\r\n            },3000)\r\n        }\r\n\r\n    }\r\n\r\n    viewDetails(id) {\r\n        this.props.history.push(`/instances/${id}`)\r\n    }\r\n\r\n    render() {\r\n        let content = <Loader />\r\n        if(!this.state.loading)\r\n            if(this.state.error)\r\n                content = (\r\n                    <div style={{textAlign: \"center\"}}>\r\n                            <h2>something Went wrong!</h2>\r\n                    </div>\r\n                )\r\n            else\r\n                content=(\r\n                    <React.Fragment>\r\n                        <div style={{textAlign: \"right\"}}>\r\n                            <br></br>\r\n                            <button className=\"btn btn-secondary\" onClick={() => {this.getInstance(\"no\")}}><span style={{fontSize: \"20px\"}}>↻ </span>Refresh</button>\r\n                        </div>\r\n\r\n                        <div style={{padding: \"20px\", border: \"2px solid black\", margin: \"30px auto\"}}>\r\n                            <div className={classes.my_address}>\r\n                                <p><span style={{fontWeight: \"bold\"}}>Instance Id: </span>{this.state.instance.id}</p>\r\n                                <p><span style={{fontWeight: \"bold\"}}>Region: </span>{this.state.instance.region}</p>\r\n                            </div>\r\n                            <div className={classes.my_address}>\r\n                                <p><span style={{fontWeight: \"bold\"}}>Current State: </span>{capitalize(this.state.instance.State.Name)}</p>\r\n                                <p><span style={{fontWeight: \"bold\"}}>Type: </span>{this.state.instance.InstanceType}</p>\r\n                            </div>\r\n                            <div className={classes.my_address}>\r\n                                <p><span style={{fontWeight: \"bold\"}}>Launch Time: </span>{new Date(this.state.instance.LaunchTime).toLocaleString(\"en-US\", {dateStyle: \"long\", timeStyle: \"long\"})}</p>\r\n                                <p><span style={{fontWeight: \"bold\"}}>Public IP Address: </span>{this.state.instance.PublicIpAddress}</p>\r\n                            </div>\r\n                            <div className={classes.my_address}>\r\n                                <p><span style={{fontWeight: \"bold\"}}>Public DNS Name: </span>{this.state.instance.PublicDnsName}</p>\r\n                                <p><span style={{fontWeight: \"bold\"}}>Cpu Count: </span>{this.state.instance.CpuOptions.CoreCount}</p>\r\n                            </div>\r\n                            {this.state.instance.Tags.length > 0 &&\r\n                                <div className={classes.my_address}>\r\n                                    <p><span style={{fontWeight: \"bold\"}}>{this.state.instance.Tags[0].Key}: </span>{this.state.instance.Tags[0].Value}</p>\r\n                                </div>\r\n                            }\r\n                            <div className={classes.address_buttons}>\r\n                                <span></span>\r\n                                <div>\r\n                                    {this.state.instance.State.Name === \"running\" || this.state.instance.State.Name === \"stopped\"\r\n                                    ? <button className=\"btn btn-danger\" style={{marginLeft: \"15px\"}} onClick={this.changeState} disabled={this.state.disabled}>{this.state.instance.State.Name === \"running\" ? \"Stop\": \"Start\"}</button>\r\n                                    :  <button className=\"btn btn-danger\" style={{marginLeft: \"15px\"}} disabled>Pending</button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </React.Fragment>\r\n                )\r\n        let alert = null;\r\n        if(this.state.showAlert){\r\n            alert = <Alert type={this.state.alertType} value={this.state.alertMsg} />\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                {content}\r\n                {alert}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default InstanceView","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Layout from './containers/Layout/Layout';\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport Login from './containers/Auth/Login';\nimport Homepage from './containers/Homepage/Homepage';\nimport Signup from './containers/Auth/Signup';\nimport InstancesList from \"./containers/Instances/InstancesList\"\nimport React, { Component } from \"react\";\nimport {connect} from \"react-redux\"\nimport * as authActions from \"./store/actions/auth\"\nimport Loader from './components/Loader/Loader';\nimport AddCredential from \"./containers/AddCredential/AddCredential\"\nimport InstanceView from './containers/Instances/InstanceView';\n\nclass App extends Component {\n\n  state={\n    appLoading: true\n  }\n\n  componentDidMount(){\n    this.props.checkUserSession();\n    this.setState({\n      appLoading: false\n    })\n  }\n\n  render(){\n\n    let routes;\n\n    if(this.props.user){\n      routes = (\n        <Switch>\n          <Route path=\"/add-credentials\" component={AddCredential} />\n          <Route path=\"/instances/:id/:region\" component={InstanceView}></Route>\n          <Route path=\"/instances\" exact component={InstancesList}></Route>\n          <Redirect from=\"/\" to=\"/instances\" />\n        </Switch>\n      )\n    }\n    else{\n      routes = (\n        <Switch>\n          <Route path=\"/login\" exact component={Login}></Route>\n          <Route path=\"/signup\" exact component={Signup}></Route>\n          <Route path= \"/\" exact component={Homepage}></Route>\n          <Redirect from=\"/\" to=\"/\" />\n        </Switch>\n      )\n    }\n\n    if(this.props.loading)\n      routes = <Loader />\n\n    return (\n      <BrowserRouter>\n        <Layout user={this.props.user}>\n          {this.state.appLoading?null: routes}\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state=>{\n  return{\n    user: state.authReducer.user,\n    error: state.authReducer.error,\n    loading: state.authReducer.loading\n  }\n}\n\nconst mapDispatchToProps = dispatch=>{\n  return{\n    checkUserSession: ()=>dispatch(authActions.checkUserSession())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"./../actions/actionTypes\"\r\nconst initialState = {\r\n    user: null,\r\n    loading: false,\r\n    error: false\r\n}\r\n\r\nconst reducer = (state=initialState, action)=>{\r\n    switch(action.type){\r\n        case actionTypes.LOGIN_SUCCESS: \r\n            return {\r\n                user: action.user,\r\n                error: false,\r\n                loading: false\r\n            }\r\n        case actionTypes.LOGIN_FAILED:\r\n            return {\r\n                user: null,\r\n                error: true,\r\n                loading: false\r\n            }\r\n        case actionTypes.AUTH_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {compose, combineReducers, createStore, applyMiddleware} from \"redux\"\nimport {Provider} from \"react-redux\";\nimport reduxThunk from \"redux-thunk\";\nimport authReducer from \"./store/reducers/auth\"\n// import reportWebVitals from './reportWebVitals';\n\nconst composeEnhancers = process.env.NODE_ENV===\"development\"?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  authReducer\n})\n\nconst store= createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}